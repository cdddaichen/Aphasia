t <- 0.5
l1 <- 880/t + 1032*(1-t)/((1-t)*t + t^2/2) + 96/(t-1)
l2 <- -880/t^2 + 1032*(-2*(t^2-2*t+2)/(t-2)^2*t^2) - 96/(t-1)^2
r <- l1/l2
t1 <- t - r
t <- 0.5
l1 <- 880/t + 1032*(1-t)/((1-t)*t + t^2/2) + 96/(t-1)
l2 <- -880/t^2 + 1032*(-2)*(t^2-2*t+2)/((t-2)^2*t^2) - 96/(t-1)^2
r <- l1/l2
t1 <- t - r
t <- 0.84673
l1 <- 880/t + 1032*(1-t)/((1-t)*t + t^2/2) + 96/(t-1)
l2 <- -880/t^2 + 1032*(-2)*(t^2-2*t+2)/((t-2)^2*t^2) - 96/(t-1)^2
r <- l1/l2
t1 <- t - r
t <- 0.94460
l1 <- 880/t + 1032*(1-t)/((1-t)*t + t^2/2) + 96/(t-1)
l2 <- -880/t^2 + 1032*(-2)*(t^2-2*t+2)/((t-2)^2*t^2) - 96/(t-1)^2
r <- l1/l2
t1 <- t - r
t <- 0.92461
l1 <- 880/t + 1032*(1-t)/((1-t)*t + t^2/2) + 96/(t-1)
l2 <- -880/t^2 + 1032*(-2)*(t^2-2*t+2)/((t-2)^2*t^2) - 96/(t-1)^2
r <- l1/l2
t1 <- t - r
t <- 0.91636
l1 <- 880/t + 1032*(1-t)/((1-t)*t + t^2/2) + 96/(t-1)
l2 <- -880/t^2 + 1032*(-2)*(t^2-2*t+2)/((t-2)^2*t^2) - 96/(t-1)^2
r <- l1/l2
t1 <- t - r
0.916/2
t2=0.916
(t^2/2 + t*(1-t))
1-t
(1-t)/2
(1-t)^2/2
2000*0.458
2000*0.4965
2000*0.04182
2000*0.003498
(880-916)^2/916 + (1032-993)^2/993 + (80 - 83.64)^2/83.64 + (8 - 6.996)^2/6.996
1/20019.433
sqrt(1/20019.433)
0.916 + sqrt(1/20019.433)
0.916 - sqrt(1/20019.433)
t <- 0.91555
l1 <- 880/t + 1032*(1-t)/((1-t)*t + t^2/2) + 96/(t-1)
l2 <- -880/t^2 + 1032*(-2)*(t^2-2*t+2)/((t-2)^2*t^2) - 96/(t-1)^2
r <- l1/l2
t1 <- t - r
t <- 0.91555
l1 <- 880/t + 1032*(1-t)/((1-t)*t + t^2/2) + 96/(t-1)
l2 <- -880/t^2 + 1032*(-2)*(t^2-2*t+2)/((t-2)^2*t^2) - 96/(t-1)^2
r <- l1/l2
t1 <- t - r
0.916 + sqrt(1/16878.61515)
0.916 - sqrt(1/16878.61515)
1355/521763
5116/2517090
r1 <- 1355/521763
r2 <- 5116/2517090
r1/r2
r1-r2
(1355+5116)-5116/(1355 + 5116)
((1355+5116)-5116)/(1355 + 5116)
((6471/3044253)-5116/2517090)/(6471/3044253)
((1355+5116)/(521763+5116)-(5116/2517090))/((1335+5116)/(2517090+5116))
1355+5116
521763+5116
((1355+5116)/(521763+2517090)-(5116/2517090))/((1335+5116)/(2517090+5116))
((1355+5116)/(521763+2517090)-(5116/2517090))/((1335+5116)/(2517090+2517090))
521763+2517090
6471/ 3038853
aa <- 6471/ 3038853
bb <- 5116/2517090
(aa-bb)/aa
(1-0.00260)/(521763*0.00260) + (1-0.00203)/(2517090*0.00203)
log(1.278)
0.2453 - 1.96 * sqrt(0.00093)
0.2453 + 1.96 * sqrt(0.00093)
exp(0.1855)
exp(0.3051)
??violin
library(cars)
library(car)
p <- ggplot(mtcars, aes(factor(cyl), mpg))
library(ggplot2)
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_violin()
qplot(factor(cyl), mpg, data = mtcars, geom = "violin")
p + geom_violin(aes(fill = cyl))
??gradient
shiny::runApp('Documents/721P2/The_Newest_One/The_Revised_One')
set.seed(1234)
x <- rnorm(n=72, mean=102, sd=5.2)
boxplot(x)
ggplot() + geom_rect(aes(xmin=mean(boot.statistics-se1, xmax=mean(boot.statistics)+se1, ymin=0,ymax=Inf), alpha=1, fill="#F25E5D"))
library(Lock5Data)
data(CommuteAtlanta)
#str(CommuteAtlanta)
time.mean = with(CommuteAtlanta, mean(Time))
time.mean
B = 1000000
n = nrow(CommuteAtlanta)
boot.samples = matrix(sample(CommuteAtlanta$Time, size = B * n, replace = TRUE),
B, n)
boot.samples2 = matrix(sample(CommuteAtlanta$Time+5, size = B * n, replace = TRUE),
B, n)
boot.statistics = apply(boot.samples, 1, mean)
boot.statistics2 = apply(boot.samples2, 1, mean)
# Bar chart with error bars with 95% ci
library(Hmisc)
bp = barplot(heights, ylim=c(0,40), col=c("#F25E5D","#18B3B7"), main="Bar plot with error bars")
se2 = 1.96 * sd(boot.statistics2)
upper = c(mean(boot.statistics)+se1, mean(boot.statistics2)+se2)
# Violin plots
cc <- c(rep(1,length(boot.statistics)),rep(2,length(boot.statistics2)))
p <- ggplot(df, aes(factor(Simulation), Mean))
panel.grid.minor=element_blank(),plot.background=element_blank()) +
# Gradient plots
ggplot() +
scale_y_continuous(name="y") +
geom_text(data=d, aes(x=x1+(x2-x1)/2, y=y1+(y2-y1)/2, label=r), size=4)
heights <- c(mean(boot.statistics),mean(boot.statistics2))
lower = c(mean(boot.statistics)-se1, mean(boot.statistics2)-se2)
cc <- c(rep(1,length(boot.statistics)),rep(2,length(boot.statistics2)))
df = data.frame(Mean <- c(boot.statistics,boot.statistics2),Simulation <- cc)
p <- ggplot(df, aes(factor(Simulation), Mean))
p + geom_violin(aes(fill = factor(dose))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2)))
df = data.frame(Mean <- c(boot.statistics,boot.statistics2),Simulation <- cc)
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2)))
scale_x_continuous(name="x") +
ggplot() + geom_rect(aes(xmin=mean(boot.statistics-se1, xmax=mean(boot.statistics)+se1, ymin=0,ymax=Inf), alpha=1, fill="#F25E5D"))
errbar(bp[,1], heights, upper, lower, add=T, xlab="Simulation")
p + geom_violin(aes(fill = factor(dose))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
geom_rect(data=d, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=t), color="black", alpha=0.5) +
library(easyGgplot2)
se1 = 1.96 * sd(boot.statistics)
d=data.frame(x1=c(1,3,1,5,4), x2=c(2,4,3,6,6), y1=c(1,1,4,1,3), y2=c(2,2,5,3,5), t=c('a','a','a','b','b'), r=c(1,2,3,4,5))
library(Lock5Data)
data(CommuteAtlanta)
#str(CommuteAtlanta)
time.mean = with(CommuteAtlanta, mean(Time))
time.mean
B = 1000000
n = nrow(CommuteAtlanta)
boot.samples = matrix(sample(CommuteAtlanta$Time, size = B * n, replace = TRUE),
B, n)
boot.samples2 = matrix(sample(CommuteAtlanta$Time+5, size = B * n, replace = TRUE),
B, n)
boot.statistics = apply(boot.samples, 1, mean)
boot.statistics2 = apply(boot.samples2, 1, mean)
# Bar chart with error bars with 95% ci
library(Hmisc)
heights <- c(mean(boot.statistics),mean(boot.statistics2))
bp = barplot(heights, ylim=c(0,40), col=c("#F25E5D","#18B3B7"), main="Bar plot with error bars")
se1 = 1.96 * sd(boot.statistics)
se2 = 1.96 * sd(boot.statistics2)
lower = c(mean(boot.statistics)-se1, mean(boot.statistics2)-se2)
upper = c(mean(boot.statistics)+se1, mean(boot.statistics2)+se2)
errbar(bp[,1], heights, upper, lower, add=T, xlab="Simulation")
# Violin plots
library(easyGgplot2)
cc <- c(rep(1,length(boot.statistics)),rep(2,length(boot.statistics2)))
df = data.frame(Mean <- c(boot.statistics,boot.statistics2),Simulation <- cc)
p <- ggplot(df, aes(factor(Simulation), Mean))
p + geom_violin(aes(fill = factor(dose))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2)))
p + geom_violin(aes(fill = factor(Simulation))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2)))
p + geom_violin(aes(fill = factor(Simulation))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2))) + theme(legend.position="none")
ggplot() + geom_rect(aes(xmin=mean(boot.statistics)-se1, xmax=mean(boot.statistics)+se1, ymin=0,ymax=Inf), alpha=1, fill="#F25E5D")
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D") + theme(axis.ticks = element_blank(), axis.text.x = element_blank())
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D") + geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7")
theme(axis.ticks = element_blank(), axis.text.x = element_blank())
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D") + geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7")
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plots")
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D") + geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot")
# Gradient Plot
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D") + geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold"))
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics), ymax=mean(boot.statistics), xmin=1,xmax=2), alpha=1, fill="black")
+ geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold"))
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics)-0.001, ymax=mean(boot.statistics)+0.001, xmin=1,xmax=2), alpha=1, fill="black")
+ geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold"))
# Gradient Plot
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold"))
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_segment(aes(x = 2, y = 15, xend = 3, yend = 15))
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_segment(aes(x = 1, y = mean(boot.statistics), xend = 2, yend = mean(boot.statistics)))
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_segment(aes(x = 1, y = mean(boot.statistics), xend = 2, yend = mean(boot.statistics))) + geom_segment(aes(x = 2.5, y = mean(boot.statistics2), xend = 3.5, yend = mean(boot.statistics2)))
library(Lock5Data)
data(CommuteAtlanta)
#str(CommuteAtlanta)
time.mean = with(CommuteAtlanta, mean(Time))
time.mean
B = 100000
n = nrow(CommuteAtlanta)
boot.samples = matrix(sample(CommuteAtlanta$Time, size = B * n, replace = TRUE),
B, n)
boot.samples2 = matrix(sample(CommuteAtlanta$Time+5, size = B * n, replace = TRUE),
B, n)
boot.statistics = apply(boot.samples, 1, mean)
boot.statistics2 = apply(boot.samples2, 1, mean)
# Bar chart with error bars with 95% ci
library(Hmisc)
heights <- c(mean(boot.statistics),mean(boot.statistics2))
bp = barplot(heights, ylim=c(0,40), col=c("#F25E5D","#18B3B7"), main="Bar plot with error bars")
se1 = 1.96 * sd(boot.statistics)
se2 = 1.96 * sd(boot.statistics2)
lower = c(mean(boot.statistics)-se1, mean(boot.statistics2)-se2)
upper = c(mean(boot.statistics)+se1, mean(boot.statistics2)+se2)
errbar(bp[,1], heights, upper, lower, add=T, xlab="Simulation")
# Violin plots
library(easyGgplot2)
cc <- c(rep(1,length(boot.statistics)),rep(2,length(boot.statistics2)))
df = data.frame(Mean <- c(boot.statistics,boot.statistics2),Simulation <- cc)
p <- ggplot(df, aes(factor(Simulation), Mean))
p + geom_violin(aes(fill = factor(Simulation))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2))) + theme(legend.position="none")
# Gradient Plot
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_segment(aes(x = 1, y = mean(boot.statistics), xend = 2, yend = mean(boot.statistics))) + geom_segment(aes(x = 2.5, y = mean(boot.statistics2), xend = 3.5, yend = mean(boot.statistics2)))
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_segment(aes(x = 1, y = mean(boot.statistics), xend = 2, yend = mean(boot.statistics))) + geom_segment(aes(x = 2.5, y = mean(boot.statistics2), xend = 3.5, yend = mean(boot.statistics2))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
library(car)
mpg
head(mpg)
mpg$city
mpg$cty
boxplot(cty)
boxplot(mpg$cty)
attach(mpg)
library(car)
library(car)
mpg
library(car)
#data(CommuteAtlanta)
#str(CommuteAtlanta)
time.mean = mpg$cty# with(CommuteAtlanta, mean(Time))
time.mean
time.mean = with(mpg, mean(cty))# with(CommuteAtlanta, mean(Time))
time.mean
B = 10000
n = nrow(mpg) #nrow(CommuteAtlanta)
boot.samples = matrix(sample(mpg$cty, size = B * n, replace = TRUE),
B, n)
boot.samples2 = matrix(sample(mpg$hwy, size = B * n, replace = TRUE),
B, n)
#boot.samples = matrix(sample(CommuteAtlanta$Time, size = B * n, replace = TRUE),
#B, n)
#boot.samples2 = matrix(sample(CommuteAtlanta$Time+5, size = B * n, replace = TRUE),
#B, n)
boot.statistics = apply(boot.samples, 1, mean)
boot.statistics2 = apply(boot.samples2, 1, mean)
# Bar chart with error bars with 95% ci
library(Hmisc)
heights <- c(mean(boot.statistics),mean(boot.statistics2))
bp = barplot(heights, ylim=c(0,40), col=c("#F25E5D","#18B3B7"), main="Bar plot with error bars")
se1 = 1.96 * sd(boot.statistics)
se2 = 1.96 * sd(boot.statistics2)
lower = c(mean(boot.statistics)-se1, mean(boot.statistics2)-se2)
upper = c(mean(boot.statistics)+se1, mean(boot.statistics2)+se2)
errbar(bp[,1], heights, upper, lower, add=T, xlab="Simulation")
# Violin plots
library(easyGgplot2)
cc <- c(rep(1,length(boot.statistics)),rep(2,length(boot.statistics2)))
df = data.frame(Mean <- c(boot.statistics,boot.statistics2),Simulation <- cc)
p <- ggplot(df, aes(factor(Simulation), Mean))
p + geom_violin(aes(fill = factor(Simulation))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2))) + theme(legend.position="none")
# Gradient Plot
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1, ymax=mean(boot.statistics)+se1, xmin=1,xmax=2), alpha=1, fill="#F25E5D")+geom_rect(aes(ymin=mean(boot.statistics2)-se2, ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ggtitle("Gradient Plot") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_segment(aes(x = 1, y = mean(boot.statistics), xend = 2, yend = mean(boot.statistics))) + geom_segment(aes(x = 2.5, y = mean(boot.statistics2), xend = 3.5, yend = mean(boot.statistics2))) +  theme(panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
@
\end{document}
nrow(CommuteAtlanta)
library(Lock5Data)
data(CommuteAtlanta)
nrow(CommuteAtlanta)
?CommuteAtlanta
rnorm(1,0.5,100)
rnorm(1,0.5,100)
?rnorm
rnorm(100,5,2)
aaa <- rnorm(100,5,2)
bbb <- rnorm(100,4,2.5)
se1 = 1.96 * sd(boot.statistics)/sqrt(n)
se1
se2
source('~/.active-rstudio-document')
cc <- c(rep(1,length(boot.statistics)),rep(2,length(boot.statistics2)))
df = data.frame(Mean <- c(boot.statistics,boot.statistics2),Simulation <- cc)
p <- ggplot(df, aes(factor(Simulation), Mean))
p + geom_violin(aes(fill = factor(Simulation))) +
theme(panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2))) +
theme(legend.position="none")
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)+1.5*se1, xmin=2.5,xmax=3.5),
alpha=0.5, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)+2*se1, xmin=2.5,xmax=3.5),
alpha=0.3, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)+3*se1, xmin=2.5,xmax=3.5),
alpha=0.1, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)-1.5*se1, xmin=2.5,xmax=3.5),
alpha=0.5, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)-2*se1, xmin=2.5,xmax=3.5),
alpha=0.3, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)-3*se1, xmin=2.5,xmax=3.5),
alpha=0.1, fill="#18B3B7")+
###
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
geom_segment(aes(x = 1, y = mean(boot.statistics),
xend = 2, yend = mean(boot.statistics))) +
geom_segment(aes(x = 2.5, y = mean(boot.statistics2),
xend = 3.5, yend = mean(boot.statistics2))) +
theme(panel.background=element_blank(),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Gradient Plot, Within 99% CI Opaque") +
theme(plot.title = element_text(lineheight=.8, face="bold")) + ylim(2, 6)
aaa <- rnorm(100,3,5)
bbb <- rnorm(100,5,5)
B = 100000
n = 100
boot.samples = matrix(sample(aaa, size = B * n, replace = TRUE),
B, n)
boot.samples2 = matrix(sample(bbb, size = B * n, replace = TRUE),
B, n)
boot.statistics = apply(boot.samples, 1, mean)
boot.statistics2 = apply(boot.samples2, 1, mean)
# Bar chart with error bars with 99% ci
library(Hmisc)
heights <- c(mean(boot.statistics),mean(boot.statistics2))
bp = barplot(heights, ylim=c(0,6), col=c("#F25E5D","#18B3B7"),
main="Bar plot with error bars, 99% CI")
se1 = 2.58 * sd(boot.statistics)/sqrt(n)
se2 = 2.58 * sd(boot.statistics2)/sqrt(n)
lower = c(mean(boot.statistics)-se1, mean(boot.statistics2)-se2)
upper = c(mean(boot.statistics)+se1, mean(boot.statistics2)+se2)
errbar(bp[,1], heights, upper, lower, add=T, xlab="Simulation")
library(easyGgplot2)
cc <- c(rep(1,length(boot.statistics)),rep(2,length(boot.statistics2)))
df = data.frame(Mean <- c(boot.statistics,boot.statistics2),Simulation <- cc)
p <- ggplot(df, aes(factor(Simulation), Mean))
p + geom_violin(aes(fill = factor(Simulation))) +
theme(panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Violin Plots") + theme(plot.title = element_text(lineheight=.8, face="bold")) + geom_hline(yintercept=c(mean(boot.statistics),mean(boot.statistics2))) +
theme(legend.position="none")
# Gradient Plot
ggplot() + geom_rect(aes(ymin=mean(boot.statistics)-se1,
ymax=mean(boot.statistics)+se1, xmin=1,xmax=2),
alpha=1, fill="#F25E5D") +
# Adding the gradient
geom_rect(aes(ymin=mean(boot.statistics)-se1,
ymax=mean(boot.statistics)+1.5*se1, xmin=1,xmax=2),
alpha=0.5, fill="#F25E5D")+
geom_rect(aes(ymin=mean(boot.statistics)-se1,
ymax=mean(boot.statistics)+2*se1, xmin=1,xmax=2),
alpha=0.3, fill="#F25E5D")+
geom_rect(aes(ymin=mean(boot.statistics)-se1,
ymax=mean(boot.statistics)+3*se1, xmin=1,xmax=2),
alpha=0.1, fill="#F25E5D")+
geom_rect(aes(ymin=mean(boot.statistics)-se1,
ymax=mean(boot.statistics)-1.5*se1, xmin=1,xmax=2),
alpha=0.5, fill="#F25E5D")+
geom_rect(aes(ymin=mean(boot.statistics)-se1,
ymax=mean(boot.statistics)-2*se1, xmin=1,xmax=2),
alpha=0.3, fill="#F25E5D")+
geom_rect(aes(ymin=mean(boot.statistics)-se1,
ymax=mean(boot.statistics)-3*se1, xmin=1,xmax=2),
alpha=0.1, fill="#F25E5D")+
###
geom_rect(aes(ymin=mean(boot.statistics2)-se2,
ymax=mean(boot.statistics2)+se2, xmin=2.5,xmax=3.5), alpha=1, fill="#18B3B7") +
# Adding the gradient
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)+1.5*se1, xmin=2.5,xmax=3.5),
alpha=0.5, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)+2*se1, xmin=2.5,xmax=3.5),
alpha=0.3, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)+3*se1, xmin=2.5,xmax=3.5),
alpha=0.1, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)-1.5*se1, xmin=2.5,xmax=3.5),
alpha=0.5, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)-2*se1, xmin=2.5,xmax=3.5),
alpha=0.3, fill="#18B3B7")+
geom_rect(aes(ymin=mean(boot.statistics2)-se1,
ymax=mean(boot.statistics2)-3*se1, xmin=2.5,xmax=3.5),
alpha=0.1, fill="#18B3B7")+
###
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
geom_segment(aes(x = 1, y = mean(boot.statistics),
xend = 2, yend = mean(boot.statistics))) +
geom_segment(aes(x = 2.5, y = mean(boot.statistics2),
xend = 3.5, yend = mean(boot.statistics2))) +
theme(panel.background=element_blank(),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
ggtitle("Gradient Plot, Within 99% CI Opaque") +
theme(plot.title = element_text(lineheight=.8, face="bold")) + ylim(2, 6)
rnorm(100, mean=0.75, sd = 0.2)
test <- rnorm(100, mean=0.8, sd = 0.4)
control <- rnorm(100, mean=0.75, sd = 0.2)
test <- rnorm(100, mean=0.8, sd = 0.4)
control
test
library(R2jags)
library(rube)
library(lme4)
#
# The minnesota radon data *again*!!!
install.packages("R2jags")
install.packages("rjags")
install.packages("rube")
install.packages("~/Downloads/rube_0.3-9.tar.gz", repos = NULL, type = "source")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("R2jags")
library(R2jags)
library(rjags)
install.packages("rjags")
install.packages("code")
install.packages("coda")
install.packages("coda")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("R2jags")
library(rjags)
install.packages("R2jags")
install.packages("rjags")
library(R2jags)
library(rjags)
library("R2jags")
pwd
R.Version()
R.Version
R.version
R.version
library(R2jags)
library(rube)
library(R2jags)
R.Version
R.version
x=c(3,7,1,7,6,1,5,4,6,2,11,3,1,6,4,4)
n=16
xbar = mean(x)
xsd = sqrt(var(x))/sqrt(n)
upper = xbar + xsd*1.96
low = xbar - xsd*1.96
c(low, upper)
AIC(lmer2a.select, m.0.3)
source('~/.active-rstudio-document', echo=TRUE)
read.csv("~/Downloads/demographics-1.csv")
read.table("~/Downloads/demographics-1.xlsx")
read.csv("~/Downloads/demographics-1.csv")
read.csv("~/Desktop/demographics-1.csv")
age =c(74,75,54,79,56,64,67,66,61,58,75,60,47,58,67,76,68,59,71,53,75,71,50,68,71,58,87,65,50,72,52,66,71,53,38,46,38,83,68,66,74,74,55,72,56,70,68,74,67,66,64)
hist(age)
de.data = data.frame(seq(1,51),age)
de.data
names(de.data) = c("id","age")
de.data
de.data$exp = ifelse(de.data$id%in%c(12,19, 20, 26, 27, 28, 39, 47, 48), 0, 1)
de.data
names(de.data) = c("id","age","exp")
control <- de.data[de.data$exp==0,]
control
exp <- de.data[de.data$exp==1,]
hist(control$age)
hist(exp$age)
summary(control$age)
summary(exp$age)
boxplot(control$age)
boxplot(exp$age)
setwd("~/Desktop/Aphasia")
read.csv("WAB.csv")
